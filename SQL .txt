show databases;

create database vit_bhopal;

show tables from vit;
drop databases vit_bhopal;

create table IT(
s_id int,
s_name varchar(40),
s_mark int);

use vit_bhopal;

select *from cse;

insert into cse values(101,'Aditya',89);


ALTER TABLE cse ADD (
            S_address VARCHAR(200),
            S_skills varchar(50)
);


ALTER TABLE cse DROP COLUMN S_Skills;


ALTER TABLE cse ADD (
                 S_country varchar(100) DEFAULT 'India'
);


INSERT INTO  movies ('title`, `director`, `year_released`, `category_id`)
VALUES ('The Great Dictator', 'Chalie Chaplie', 1920, 7);

INSERT INTO movies (`title`, `director`, `category_id`) 
VALUES ('sample movie', 'Anonymous', 8);

INSERT INTO  movies (`title`, `director`, `year_released`, `category_id`) 
VALUES ('movie 3', 'John Brown', 1920, 8);


SELECT * FROM movies;

DELETE FROM movies 
WHERE movie_id = 18 ;

CREATE TABLE student;

INSERT INTO student VALUES(101, 'Adam', 15);

INSERT INTO student(id, name) values(102, 'Alex');

INSERT INTO Student VALUES(103,'Chris', default);

UPDATE table_name 
SET column_name = new_value 
WHERE some_condition;


UPDATE student
SET age=18 
WHERE student_id=102;


SELECT * FROM Products
WHERE Price BETWEEN 10 AND 20;


SELECT * FROM Products
WHERE Price BETWEEN 10 AND 20
AND CategoryID NOT IN (1,2,3);



CREATE TABLE Persons (
    ID int NOT NULL,
    LastName varchar(255) NOT NULL,
    FirstName varchar(255) NOT NULL,
    Age int
);


ALTER TABLE Persons
MODIFY Age int NOT NULL;


CREATE TABLE Orders (
    OrderID int NOT NULL,

    OrderNumber int NOT NULL,

    PersonID int,

    PRIMARY KEY (OrderID),
    FOREIGN KEY (PersonID) REFERENCES Persons(PersonID)
);



ALTER TABLE Orders
ADD CONSTRAINT FK_PersonOrder
FOREIGN KEY (PersonID) REFERENCES Persons(PersonID);


SELECT CustomerID AS ID, CustomerName AS Customer
FROM Customers;



SELECT * 
FROM Student 
WHERE s_name LIKE '_d%';



CREATE VIEW [Brazil Customers] AS
SELECT CustomerName, ContactName
FROM Customers
WHERE Country = 'Brazil';


SELECT * FROM [Brazil Customers];


CREATE VIEW [Products Above Average Price] AS
SELECT ProductName, Price
FROM Products
WHERE Price > (SELECT AVG(Price) FROM Products);


SELECT * FROM [Products Above Average Price];



SELECT * FROM Emp ORDER BY salary ;


SELECT DISTINCT salary FROM Emp;


SELECT Shippers.ShipperName, COUNT(Orders.OrderID) AS NumberOfOrders FROM Orders
LEFT JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID
GROUP BY ShipperName;


SELECT COUNT(CustomerID), Country
FROM Customers
GROUP BY Country
HAVING COUNT(CustomerID) > 5
ORDER BY COUNT(CustomerID) DESC;


SELECT Employees.LastName, COUNT(Orders.OrderID) AS NumberOfOrders

FROM Orders

INNER JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID

WHERE LastName = 'Davolio' OR LastName = 'Fuller'
GROUP BY LastName
HAVING COUNT(Orders.OrderID) > 25;




SELECT MAX(items), MIN(items), FLOOR(AVG(items))

FROM
    (SELECT 
        orderNumber, COUNT(orderNumber) AS items
    FROM
        orderdetails
    GROUP BY orderNumber) AS lineitems;



SELECT *
FROM class LEFT OUTER JOIN class_info ON (class.id = class_info.id);


SELECT * 
FROM class RIGHT OUTER JOIN class_info ON (class.id = class_info.id);



SELECT *
 FROM class FULL OUTER JOIN class_info ON (class.id = class_info.id);









































