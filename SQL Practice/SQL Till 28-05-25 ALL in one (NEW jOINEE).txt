17-05-25 BEGINNING OF SQL 


create database vitap;

use vitap;

create table vitap_cse(
csstudent_name varchar(20),
csstudent_id int,
csstudent_marks int,
csstudent_cgpa float
);

create table vitap_mech(
mstudent_name varchar(20),
mstudent_id int,
mstudent_marks int,
mstudent_cgpa float
);

create table vitap_civil(
cstudent_name varchar(20),
cstudent_id int,
cstudent_marks int,
cstudent_cgpa float
);
-- vitap_cse
INSERT INTO vitap_cse VALUES 
("Anirudh", 10001, 85, 9.21),
("Bhavana", 10002, 79, 8.72),
("Chaitanya", 10003, 90, 9.34),
("Deepika", 10004, 84, 8.96),
("Eshwar", 10005, 76, 8.53),
("Farhan", 10006, 81, 8.89),
("Gayathri", 10007, 88, 9.10),
("Harsha", 10008, 93, 9.47),
("Indu", 10009, 82, 8.69),
("Jayant", 10010, 80, 8.61);

-- vitap_mech
INSERT INTO vitap_mech VALUES 
("Karan", 20001, 86, 9.12),
("Lavanya", 20002, 78, 8.75),
("Manoj", 20003, 89, 9.20),
("Nisha", 20004, 83, 8.84),
("Omkar", 20005, 85, 9.00),
("Pavani", 20006, 77, 8.62),
("Qadir", 20007, 80, 8.50),
("Ritika", 20008, 90, 9.25),
("Surya", 20009, 81, 8.66),
("Tanya", 20010, 84, 8.91);

-- vitap_civil
INSERT INTO vitap_civil VALUES 
("Uday", 30001, 79, 8.43),
("Varsha", 30002, 87, 9.05),
("Wasim", 30003, 92, 9.38),
("Xenia", 30004, 86, 8.99),
("Yash", 30005, 80, 8.61),
("Zara", 30006, 88, 9.18),
("Aarav", 30007, 83, 8.85),
("Bhavik", 30008, 75, 8.40),
("Charan", 30009, 91, 9.29),
("Divya", 30010, 89, 9.03);

select * from vitap_mech;
select * from vitap_civil;


alter table vitap_cse add(
cstudent_city varchar(20)
);

select *
from vitap_cse;

alter table vitap_cse 
drop cstudent_city;

alter table vitap_cse 
add cstudent_city varchar(20)
default "Andhra Pradesh";


update vitap_cse 
set csstudent_marks = 95 
where csstudent_id = 8393;

update vitap_cse 
set csstudent_marks = csstudent_marks*1;






19-05-25  - DELETE,TRUNCATE ,DROP


CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);

INSERT INTO Worker 
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
		(001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),
		(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'),
		(003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),
		(004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
		(005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
		(006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
		(007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account'),
		(008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');


-- Drop : DDL 
-- It is a permanent action (You cannot undo)
show databases;
drop database vit;

use vitap;
desc vitap_cse;


#select *
 from vitap_cse;
#select *
 from vitap_civil;

select *
 from worker;

delete from worker
 where worker_id = 2;
select * from worker;

delete from worker;
select * from worker;



truncate table worker;
select * from worker;
desc worker;




start transaction;
insert into worker value(009,"Riyaz","shaik",500000,'18-05-15 07.00.00',"Admin");
savepoint a11;
insert into worker value(010,"Riya","Khan",800000,'12-08-17 08.00.00',"Admin");
savepoint a12;
delete from worker where worker_id = 010;

select *
 from worker;

rollback to a12;
select *
 from worker;


select *
 from worker
 where salary >= 200000;

select *
 from worker
 where salary <= 200000;

select * 
from worker 
where salary <= 300000 and salary >= 200000;


select * 
from worker
 where salary >= 200000 and department = "Admin";

select *
 from worker
 where salary >= 200000 and department = "hr";

select * 
from worker
 where salary <= 200000 and (department = "hr" or department = "admin");

select *
 from worker 
where salary <= 200000 and department in ("hr","admin");

select * 
from worker
 where (salary <= 300000 and salary >= 100000) and (department = "account" or department = "admin");


select *
 from worker
 where worker_id in (4,5,6);

select *
 from worker
 where worker_id not in (4,5,6);

select * 
from worker
 where worker_id%2 = 0 and department in ("admin","hr") and salary = (select max(Salary) from worker);





20-05-25


create database tuesday;
use tuesday;
drop database tuesday;
create table category(
cID int primary key,
cName varchar(30),
cDetails varchar(30)
);

insert into category values(101,'Electronics','XYZ'),(102,'Furnitures','XYZ');

select * from category;

create table products(
pID int primary key,
pName varchar(30),
pDetials varchar(30),
cID int,
foreign key products(cID) references category(cID) on update cascade);
desc products;

insert into products values(401,'Oneplus 11R','8GB RAM 128GB SSD',101);

select * from products;


delete from category 
where cID = 101; 

update category 
set cID = 109 
where cID = 101;

 
update category 
set cID = 108
 where cID = 102; 



create table customers( -- Initial Creation
customerID int not null,
customerAge int,
customerName varchar(30)
);

alter table customers modify customerName varchar(30) not null; 
desc customers;

drop table customers;


create table customers( -- Initial Creation
customerID int,
customerAge int,
customerName varchar(30),
primary key (customerID)
);
desc customers;

alter table customers add primary key (customerID); -- Adding Later
desc customers;

alter table customers drop primary key; -- Droping PK
desc customers;

-- FORIEGN KEY
create table customers( -- Initial Creation
customerID int,
customerAge int,
customerName varchar(30),
primary key (customerID)
);

create table subscription(
sID int,
sExpiry varchar(30),
primary key (sID),
customerID int,
constraint FK_constraint Foreign key (customerID) references customers(customerID)
);
desc subscription;

alter table subscription drop foreign key FK_constraint;  

alter table subscription add constraint FK_constraint foreign key (customerID) references customers(customerID); --
desc subscription;


-- CHECK CONSTRAINT
create table items(
itemID int,
itemName varchar(30),
itemCost int,
check (itemCost >=0)
);

-- DEFAULT CONSTRAINT
drop table items;

create table items(
itemID int default 001,
itemName varchar(30),
itemCost int,
check (itemCost >=0)
);
desc items;




21-05-25


CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);

INSERT INTO Worker 
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
		(001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),
		(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'),
		(003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),
		(004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
		(005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
		(006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
		(007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account'),
		(008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');


select * 
from worker
 where salary between 100000 and 500000;

select *
 from worker
 where salary not between 100000 and 500000;


select *
 from worker 
where salary between 100000 and 500000  and department in ("hr","account");

select * 
from worker 
where salary between 100000 and 500000  and department not in ("hr","account");

select max(salary) as max_salary 
from worker;

select min(salary) as min_salary
 from worker;

select avg(salary) as avg_salary
 from worker;

select count(*) as noOfMembers
 from worker;

select sum(salary) as sumSalary
 from worker;

select distinct (department) from worker;
CREATE TABLE Worker1 (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);


INSERT INTO Worker 
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
		(009, 'Monika1', 'Arora1', 100000, '14-02-20 09.00.00', 'HR'),
		(010, 'Niharika1', 'Verma1', 80000, '14-06-11 09.00.00', 'Admin'),
		(011, 'Vishal1', 'Singhal1', 300000, '14-02-20 09.00.00', 'HR'),
		(012, 'Amitabh1', 'Singh1', 500000, '14-02-20 09.00.00', 'Admin'),
		(013, 'Vivek1', 'Bhati1', 500000, '14-06-11 09.00.00', 'Admin'),
		(014, 'Vipul1', 'Diwan1', 200000, '14-06-11 09.00.00', 'Account'),
		(015, 'Satish1', 'Kumar1', 75000, '14-01-20 09.00.00', 'Account'),
		(016, 'Geetika1', 'Chauhan1', 90000, '14-04-11 09.00.00', 'Admin');

select department from worker
union 
select department from worker1;

select department from worker
union all -- 

select department from worker1;

select *
 from worker
 where department = 'admin' and salary <= 100000
union 
select *
 from worker1 
where department = 'admin';


select first_name,salary,
case
when salary <= 300000 then 'Lower'
when salary > 300000 && salary <= 700000 then 'Middle'
when salary > 700000 then 'Higher'
else 'Incorrect Data'
end
as Status from worker; 

select *
 from worker
 where salary <= 500000 order by salary desc;


select *
 from worker
 order by first_name asc, last_name desc;


select * from worker;

select * 
from worker 
where first_name like 'A%';

select *
 from worker 
where first_name like '_A%';

select * 
from worker 
where first_name like '%_z';

select * 
from worker
 where first_name like 'a%a';

select * 
from worker
 where last_name like 'S%a';

create view hrMembers as select *
 from worker
 where department = 'hr';
create view adminMembers as select * from worker where department = 'admin';
create view accountMembers as select * from worker where department = 'account';

select * from adminMembers;

#create or replace view {viewName} as select ...... -> to rename existing one or create new one if does not exist
create or replace view HRMembers as select * from worker where department = 'hr';
select * from HRMembers;




22-05-25 



use vitap;
drop table worker;

select count(department) 
from worker group by department order by count(department) desc limit 1;

select department,sum(salary) 
from worker group by department order by sum(salary) limit 1;

select department,count(department) 
from worker group by department having count(department) > 3;


select * from worker;
select department, sum(salary) 

from worker group by department order by sum(salary) desc limit 1;
select department, sum(salary) 

from worker group by department order by sum(salary) desc limit 1 offset 1;
select department, sum(salary)

 from worker group by department order by sum(salary) desc limit 1 offset 2;
select department, sum(salary) 

from worker group by department order by sum(salary) limit 1;

select *
 from worker 
where salary = (select max(salary) from worker);
select * 
from worker where salary > (select salary from worker order by salary asc limit 1 offset 1);

select *
 from worker1;

create table student(
s_id int,
s_name varchar(25)
);
insert into student values (101,'jayanth'),(102,'karthik'),(103,'Praveen'),(105,'mahesh'),(106,'Arun');

select * from student;

create table address(
s_id int,
s_address varchar(25));
insert into address values (101,'coimbatore'),(104,'chennai'),(105,'pune');

select * from address;

-- JOINS

select * 
from student cross join address;

select * from student inner join address
 where student.s_id = address.s_id;

select *
 from student natural join address;

select *
 from student left join address on student.s_id = address.s_id;

select * 
from student right join address on student.s_id = address.s_id;


